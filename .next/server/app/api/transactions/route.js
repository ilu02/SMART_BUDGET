"use strict";(()=>{var e={};e.id=866,e.ids=[866],e.modules={399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},4770:e=>{e.exports=require("crypto")},3592:(e,t,r)=>{r.r(t),r.d(t,{originalPathname:()=>m,patchFetch:()=>b,requestAsyncStorage:()=>y,routeModule:()=>g,serverHooks:()=>h,staticGenerationAsyncStorage:()=>w});var n={};r.r(n),r.d(n,{DELETE:()=>p,GET:()=>d,POST:()=>u,PUT:()=>l});var a=r(9303),o=r(8716),s=r(670),i=r(7070),c=r(3023);async function d(e){try{let{searchParams:t}=new URL(e.url),r=t.get("userId"),n=t.get("budgetId");if(!r)return i.NextResponse.json({error:"User ID is required"},{status:400});let a=await (0,c.ve)(r,n);return i.NextResponse.json({success:!0,transactions:a})}catch(e){return console.error("Get transactions error:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}async function u(e){try{let{userId:t,...r}=await e.json();if(!t)return i.NextResponse.json({error:"User ID is required"},{status:400});if(!r.amount||!r.description||!r.category||!r.type)return i.NextResponse.json({error:"Amount, description, category, and type are required"},{status:400});let n=await (0,c.dT)(t,r);return i.NextResponse.json({success:!0,transaction:n})}catch(e){return console.error("Add transaction error:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}async function l(e){try{let{id:t,...r}=await e.json();if(!t)return i.NextResponse.json({error:"Transaction ID is required"},{status:400});let n=await (0,c.Ld)(t,r);return i.NextResponse.json({success:!0,transaction:n})}catch(e){return console.error("Update transaction error:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}async function p(e){try{let{searchParams:t}=new URL(e.url),r=t.get("id");if(!r)return i.NextResponse.json({error:"Transaction ID is required"},{status:400});return await (0,c.Ks)(r),i.NextResponse.json({success:!0,message:"Transaction deleted successfully"})}catch(e){return console.error("Delete transaction error:",e),i.NextResponse.json({error:"Internal server error"},{status:500})}}let g=new a.AppRouteRouteModule({definition:{kind:o.x.APP_ROUTE,page:"/api/transactions/route",pathname:"/api/transactions",filename:"route",bundlePath:"app/api/transactions/route"},resolvedPagePath:"C:\\Users\\USER\\Desktop\\smart_project2\\app\\api\\transactions\\route.js",nextConfigOutput:"",userland:n}),{requestAsyncStorage:y,staticGenerationAsyncStorage:w,serverHooks:h}=g,m="/api/transactions/route";function b(){return(0,s.patchFetch)({serverHooks:h,staticGenerationAsyncStorage:w})}},3023:(e,t,r)=>{r.d(t,{PM:()=>s,Ri:()=>b,dT:()=>m,So:()=>p,r4:()=>g,sX:()=>E,Ks:()=>I,F_:()=>h,qN:()=>w,ve:()=>y,_T:()=>l,ki:()=>u,az:()=>f,Ld:()=>x,Lj:()=>D});let n=require("@prisma/client");var a=r(8691);let o=globalThis.prisma||new n.PrismaClient,s={email:"demo@example.com",password:"password123",name:"Demo User"},i=[{amount:3200,description:"Monthly Salary",category:"Salary",type:"income",date:new Date("2024-08-01")},{amount:1200,description:"Freelance Project",category:"Freelance",type:"income",date:new Date("2024-08-15")},{amount:850,description:"Rent Payment",category:"Housing",type:"expense",date:new Date("2024-08-01")},{amount:320,description:"Grocery Shopping",category:"Food & Dining",type:"expense",date:new Date("2024-08-05")},{amount:45,description:"Gas Station",category:"Transportation",type:"expense",date:new Date("2024-08-10")},{amount:89,description:"Movie Night",category:"Entertainment",type:"expense",date:new Date("2024-08-12")},{amount:156,description:"Online Shopping",category:"Shopping",type:"expense",date:new Date("2024-08-18")},{amount:75,description:"Gym Membership",category:"Health & Fitness",type:"expense",date:new Date("2024-08-20")}],c=[{category:"Food & Dining",budget:800,spent:567,icon:"ri-restaurant-line",color:"bg-blue-500",description:"Restaurants, groceries, and food delivery"},{category:"Transportation",budget:400,spent:285,icon:"ri-gas-station-line",color:"bg-teal-500",description:"Gas, public transport, and ride-sharing"},{category:"Entertainment",budget:200,spent:178,icon:"ri-film-line",color:"bg-pink-500",description:"Movies, games, and leisure activities"},{category:"Shopping",budget:600,spent:432,icon:"ri-shopping-bag-line",color:"bg-red-500",description:"Clothes, electronics, and general shopping"},{category:"Health & Fitness",budget:150,spent:99,icon:"ri-heart-pulse-line",color:"bg-orange-500",description:"Gym, supplements, and medical expenses"},{category:"Utilities",budget:250,spent:234,icon:"ri-flashlight-line",color:"bg-yellow-500",description:"Electricity, water, internet, and phone"},{category:"Education",budget:300,spent:165,icon:"ri-book-line",color:"bg-indigo-500",description:"Courses, books, and learning materials"},{category:"Travel",budget:500,spent:0,icon:"ri-plane-line",color:"bg-purple-500",description:"Flights, hotels, and vacation expenses"}];async function d(){try{let e=await o.user.findUnique({where:{email:s.email}});if(!e){let t=await a.ZP.hash(s.password,12);e=await o.user.create({data:{email:s.email,password:t,name:s.name,isDemo:!0}}),console.log("Demo user created successfully")}return e}catch(e){throw console.error("Error creating demo user:",e),e}}async function u(){try{let e=await d(),t=await o.transaction.count({where:{userId:e.id}}),r=await o.budget.count({where:{userId:e.id}});return 0===t&&(await o.transaction.createMany({data:i.map(t=>({...t,userId:e.id}))}),console.log("Demo transactions seeded successfully")),0===r&&(await o.budget.createMany({data:c.map(t=>({...t,userId:e.id}))}),console.log("Demo budgets seeded successfully")),e}catch(e){throw console.error("Error seeding demo data:",e),e}}async function l(){try{let e=await o.user.findUnique({where:{email:s.email}});e&&(await o.transaction.deleteMany({where:{userId:e.id}}),await o.budget.deleteMany({where:{userId:e.id}}),await u(),console.log("Demo data reset successfully"))}catch(e){throw console.error("Error resetting demo data:",e),e}}async function p(e,t){try{let r=await o.user.findUnique({where:{email:e}});if(!r||!await a.ZP.compare(t,r.password))return null;let{password:n,...s}=r;return s}catch(e){throw console.error("Error authenticating user:",e),e}}async function g(e,t,r){try{let n=await a.ZP.hash(t,12),{password:s,...i}=await o.user.create({data:{email:e,password:n,name:r,isDemo:!1}});return i}catch(e){throw console.error("Error creating user:",e),e}}async function y(e,t=null){try{let r={userId:e};return t&&(r.budgetId=t),await o.transaction.findMany({where:r,include:{budget:{select:{id:!0,category:!0,icon:!0,color:!0}}},orderBy:{date:"desc"}})}catch(e){throw console.error("Error getting user transactions:",e),e}}async function w(e){try{return(await o.budget.findMany({where:{userId:e},include:{transactions:{where:{type:"expense"}}},orderBy:{category:"asc"}})).map(e=>{let t=e.transactions.reduce((e,t)=>e+Math.abs(t.amount),0);return{...e,spent:t,transactionCount:e.transactions.length,transactions:void 0}})}catch(e){throw console.error("Error getting user budgets:",e),e}}async function h(e,t){try{let r=await o.budget.findFirst({where:{id:t,userId:e},include:{transactions:{orderBy:{date:"desc"}}}});if(!r)return null;let n=r.transactions.filter(e=>"expense"===e.type).reduce((e,t)=>e+Math.abs(t.amount),0);return{...r,spent:n,transactionCount:r.transactions.length}}catch(e){throw console.error("Error getting budget with transactions:",e),e}}async function m(e,t){try{let{description:r,category:n,amount:a,date:s,type:i,budgetId:c}=t,d=c;if(!d&&"expense"===i){let t=await o.budget.findFirst({where:{userId:e,category:n}});d=t?.id}let u=await o.transaction.create({data:{description:r,category:n,amount:a,type:i,date:new Date(s),userId:e,budgetId:d}});return"expense"===i&&d&&await v(d),u}catch(e){throw console.error("Error adding transaction:",e),e}}async function b(e,t){try{return await o.budget.create({data:{...t,userId:e}})}catch(e){throw console.error("Error adding budget:",e),e}}async function f(e,t){try{return await o.budget.update({where:{id:e},data:t})}catch(e){throw console.error("Error updating budget:",e),e}}async function x(e,t){try{let r=await o.transaction.findUnique({where:{id:e}}),n=await o.transaction.update({where:{id:e},data:t});return r?.budgetId&&"expense"===r.type&&await v(r.budgetId),n.budgetId&&"expense"===n.type&&n.budgetId!==r?.budgetId&&await v(n.budgetId),n}catch(e){throw console.error("Error updating transaction:",e),e}}async function I(e){try{let t=await o.transaction.findUnique({where:{id:e}});return await o.transaction.delete({where:{id:e}}),t?.budgetId&&"expense"===t.type&&await v(t.budgetId),!0}catch(e){throw console.error("Error deleting transaction:",e),e}}async function E(e){try{return await o.budget.delete({where:{id:e}}),!0}catch(e){throw console.error("Error deleting budget:",e),e}}async function v(e){try{let t=(await o.transaction.findMany({where:{budgetId:e,type:"expense"}})).reduce((e,t)=>e+Math.abs(t.amount),0);return await o.budget.update({where:{id:e},data:{spent:t}})}catch(e){throw console.error("Error updating budget spent:",e),e}}async function D(e,t){try{return await o.user.update({where:{id:e},data:{name:t.name,email:t.email,avatar:t.avatar}})}catch(e){throw console.error("Error updating user profile:",e),e}}}};var t=require("../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),n=t.X(0,[276,242],()=>r(3592));module.exports=n})();