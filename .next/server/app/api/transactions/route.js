"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "app/api/transactions/route";
exports.ids = ["app/api/transactions/route"];
exports.modules = {

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/app-page.runtime.dev.js":
/*!*************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-page.runtime.dev.js" ***!
  \*************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-page.runtime.dev.js");

/***/ }),

/***/ "next/dist/compiled/next-server/app-route.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/app-route.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/app-route.runtime.dev.js");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("crypto");

/***/ }),

/***/ "(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftransactions%2Froute&page=%2Fapi%2Ftransactions%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftransactions%2Froute.js&appDir=C%3A%5CUsers%5CUSER%5CDesktop%5Csmart_project2%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUSER%5CDesktop%5Csmart_project2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!":

  !*** ./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftransactions%2Froute&page=%2Fapi%2Ftransactions%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftransactions%2Froute.js&appDir=C%3A%5CUsers%5CUSER%5CDesktop%5Csmart_project2%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUSER%5CDesktop%5Csmart_project2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D! ***!

/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   originalPathname: () => (/* binding */ originalPathname),\n/* harmony export */   patchFetch: () => (/* binding */ patchFetch),\n/* harmony export */   requestAsyncStorage: () => (/* binding */ requestAsyncStorage),\n/* harmony export */   routeModule: () => (/* binding */ routeModule),\n/* harmony export */   serverHooks: () => (/* binding */ serverHooks),\n/* harmony export */   staticGenerationAsyncStorage: () => (/* binding */ staticGenerationAsyncStorage)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/future/route-modules/app-route/module.compiled */ \"(rsc)/./node_modules/next/dist/server/future/route-modules/app-route/module.compiled.js\");\n/* harmony import */ var next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/future/route-kind */ \"(rsc)/./node_modules/next/dist/server/future/route-kind.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/server/lib/patch-fetch */ \"(rsc)/./node_modules/next/dist/server/lib/patch-fetch.js\");\n/* harmony import */ var next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var C_Users_USER_Desktop_smart_project2_app_api_transactions_route_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./app/api/transactions/route.js */ \"(rsc)/./app/api/transactions/route.js\");\n\n\n\n\n// We inject the nextConfigOutput here so that we can use them in the route\n// module.\nconst nextConfigOutput = \"\"\nconst routeModule = new next_dist_server_future_route_modules_app_route_module_compiled__WEBPACK_IMPORTED_MODULE_0__.AppRouteRouteModule({\n    definition: {\n        kind: next_dist_server_future_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.APP_ROUTE,\n        page: \"/api/transactions/route\",\n        pathname: \"/api/transactions\",\n        filename: \"route\",\n        bundlePath: \"app/api/transactions/route\"\n    },\n    resolvedPagePath: \"C:\\\\Users\\\\USER\\\\Desktop\\\\smart_project2\\\\app\\\\api\\\\transactions\\\\route.js\",\n    nextConfigOutput,\n    userland: C_Users_USER_Desktop_smart_project2_app_api_transactions_route_js__WEBPACK_IMPORTED_MODULE_3__\n});\n// Pull out the exports that we need to expose from the module. This should\n// be eliminated when we've moved the other routes to the new format. These\n// are used to hook into the route.\nconst { requestAsyncStorage, staticGenerationAsyncStorage, serverHooks } = routeModule;\nconst originalPathname = \"/api/transactions/route\";\nfunction patchFetch() {\n    return (0,next_dist_server_lib_patch_fetch__WEBPACK_IMPORTED_MODULE_2__.patchFetch)({\n        serverHooks,\n        staticGenerationAsyncStorage\n    });\n}\n\n\n//# sourceMappingURL=app-route.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LWFwcC1sb2FkZXIuanM/bmFtZT1hcHAlMkZhcGklMkZ0cmFuc2FjdGlvbnMlMkZyb3V0ZSZwYWdlPSUyRmFwaSUyRnRyYW5zYWN0aW9ucyUyRnJvdXRlJmFwcFBhdGhzPSZwYWdlUGF0aD1wcml2YXRlLW5leHQtYXBwLWRpciUyRmFwaSUyRnRyYW5zYWN0aW9ucyUyRnJvdXRlLmpzJmFwcERpcj1DJTNBJTVDVXNlcnMlNUNVU0VSJTVDRGVza3RvcCU1Q3NtYXJ0X3Byb2plY3QyJTVDYXBwJnBhZ2VFeHRlbnNpb25zPXRzeCZwYWdlRXh0ZW5zaW9ucz10cyZwYWdlRXh0ZW5zaW9ucz1qc3gmcGFnZUV4dGVuc2lvbnM9anMmcm9vdERpcj1DJTNBJTVDVXNlcnMlNUNVU0VSJTVDRGVza3RvcCU1Q3NtYXJ0X3Byb2plY3QyJmlzRGV2PXRydWUmdHNjb25maWdQYXRoPXRzY29uZmlnLmpzb24mYmFzZVBhdGg9JmFzc2V0UHJlZml4PSZuZXh0Q29uZmlnT3V0cHV0PSZwcmVmZXJyZWRSZWdpb249Jm1pZGRsZXdhcmVDb25maWc9ZTMwJTNEISIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBc0c7QUFDdkM7QUFDYztBQUMwQjtBQUN2RztBQUNBO0FBQ0E7QUFDQSx3QkFBd0IsZ0hBQW1CO0FBQzNDO0FBQ0EsY0FBYyx5RUFBUztBQUN2QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0EsWUFBWTtBQUNaLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxRQUFRLGlFQUFpRTtBQUN6RTtBQUNBO0FBQ0EsV0FBVyw0RUFBVztBQUN0QjtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ3VIOztBQUV2SCIsInNvdXJjZXMiOlsid2VicGFjazovL3NtYXJ0LWJ1ZGdldC1hcHAvP2NhYzMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXBwUm91dGVSb3V0ZU1vZHVsZSB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1tb2R1bGVzL2FwcC1yb3V0ZS9tb2R1bGUuY29tcGlsZWRcIjtcbmltcG9ydCB7IFJvdXRlS2luZCB9IGZyb20gXCJuZXh0L2Rpc3Qvc2VydmVyL2Z1dHVyZS9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBwYXRjaEZldGNoIGFzIF9wYXRjaEZldGNoIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvbGliL3BhdGNoLWZldGNoXCI7XG5pbXBvcnQgKiBhcyB1c2VybGFuZCBmcm9tIFwiQzpcXFxcVXNlcnNcXFxcVVNFUlxcXFxEZXNrdG9wXFxcXHNtYXJ0X3Byb2plY3QyXFxcXGFwcFxcXFxhcGlcXFxcdHJhbnNhY3Rpb25zXFxcXHJvdXRlLmpzXCI7XG4vLyBXZSBpbmplY3QgdGhlIG5leHRDb25maWdPdXRwdXQgaGVyZSBzbyB0aGF0IHdlIGNhbiB1c2UgdGhlbSBpbiB0aGUgcm91dGVcbi8vIG1vZHVsZS5cbmNvbnN0IG5leHRDb25maWdPdXRwdXQgPSBcIlwiXG5jb25zdCByb3V0ZU1vZHVsZSA9IG5ldyBBcHBSb3V0ZVJvdXRlTW9kdWxlKHtcbiAgICBkZWZpbml0aW9uOiB7XG4gICAgICAgIGtpbmQ6IFJvdXRlS2luZC5BUFBfUk9VVEUsXG4gICAgICAgIHBhZ2U6IFwiL2FwaS90cmFuc2FjdGlvbnMvcm91dGVcIixcbiAgICAgICAgcGF0aG5hbWU6IFwiL2FwaS90cmFuc2FjdGlvbnNcIixcbiAgICAgICAgZmlsZW5hbWU6IFwicm91dGVcIixcbiAgICAgICAgYnVuZGxlUGF0aDogXCJhcHAvYXBpL3RyYW5zYWN0aW9ucy9yb3V0ZVwiXG4gICAgfSxcbiAgICByZXNvbHZlZFBhZ2VQYXRoOiBcIkM6XFxcXFVzZXJzXFxcXFVTRVJcXFxcRGVza3RvcFxcXFxzbWFydF9wcm9qZWN0MlxcXFxhcHBcXFxcYXBpXFxcXHRyYW5zYWN0aW9uc1xcXFxyb3V0ZS5qc1wiLFxuICAgIG5leHRDb25maWdPdXRwdXQsXG4gICAgdXNlcmxhbmRcbn0pO1xuLy8gUHVsbCBvdXQgdGhlIGV4cG9ydHMgdGhhdCB3ZSBuZWVkIHRvIGV4cG9zZSBmcm9tIHRoZSBtb2R1bGUuIFRoaXMgc2hvdWxkXG4vLyBiZSBlbGltaW5hdGVkIHdoZW4gd2UndmUgbW92ZWQgdGhlIG90aGVyIHJvdXRlcyB0byB0aGUgbmV3IGZvcm1hdC4gVGhlc2Vcbi8vIGFyZSB1c2VkIHRvIGhvb2sgaW50byB0aGUgcm91dGUuXG5jb25zdCB7IHJlcXVlc3RBc3luY1N0b3JhZ2UsIHN0YXRpY0dlbmVyYXRpb25Bc3luY1N0b3JhZ2UsIHNlcnZlckhvb2tzIH0gPSByb3V0ZU1vZHVsZTtcbmNvbnN0IG9yaWdpbmFsUGF0aG5hbWUgPSBcIi9hcGkvdHJhbnNhY3Rpb25zL3JvdXRlXCI7XG5mdW5jdGlvbiBwYXRjaEZldGNoKCkge1xuICAgIHJldHVybiBfcGF0Y2hGZXRjaCh7XG4gICAgICAgIHNlcnZlckhvb2tzLFxuICAgICAgICBzdGF0aWNHZW5lcmF0aW9uQXN5bmNTdG9yYWdlXG4gICAgfSk7XG59XG5leHBvcnQgeyByb3V0ZU1vZHVsZSwgcmVxdWVzdEFzeW5jU3RvcmFnZSwgc3RhdGljR2VuZXJhdGlvbkFzeW5jU3RvcmFnZSwgc2VydmVySG9va3MsIG9yaWdpbmFsUGF0aG5hbWUsIHBhdGNoRmV0Y2gsICB9O1xuXG4vLyMgc291cmNlTWFwcGluZ1VSTD1hcHAtcm91dGUuanMubWFwIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftransactions%2Froute&page=%2Fapi%2Ftransactions%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftransactions%2Froute.js&appDir=C%3A%5CUsers%5CUSER%5CDesktop%5Csmart_project2%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUSER%5CDesktop%5Csmart_project2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!\n");

/***/ }),

/***/ "(rsc)/./app/api/transactions/route.js":
/*!***************************************!*\
  !*** ./app/api/transactions/route.js ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DELETE: () => (/* binding */ DELETE),\n/* harmony export */   GET: () => (/* binding */ GET),\n/* harmony export */   POST: () => (/* binding */ POST),\n/* harmony export */   PUT: () => (/* binding */ PUT)\n/* harmony export */ });\n/* harmony import */ var next_server__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/server */ \"(rsc)/./node_modules/next/dist/api/server.js\");\n/* harmony import */ var _lib_database_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../../lib/database.js */ \"(rsc)/./lib/database.js\");\n\n\nasync function GET(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const userId = searchParams.get(\"userId\");\n        const budgetId = searchParams.get(\"budgetId\");\n        if (!userId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        const transactions = await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_1__.getUserTransactions)(userId, budgetId);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            transactions\n        });\n    } catch (error) {\n        console.error(\"Get transactions error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function POST(request) {\n    try {\n        const { userId, ...transactionData } = await request.json();\n        if (!userId) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"User ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        if (!transactionData.amount || !transactionData.description || !transactionData.category || !transactionData.type) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Amount, description, category, and type are required\"\n            }, {\n                status: 400\n            });\n        }\n        const transaction = await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_1__.addTransaction)(userId, transactionData);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            transaction\n        });\n    } catch (error) {\n        console.error(\"Add transaction error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function PUT(request) {\n    try {\n        const { id, ...transactionData } = await request.json();\n        if (!id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Transaction ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        const transaction = await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_1__.updateTransaction)(id, transactionData);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            transaction\n        });\n    } catch (error) {\n        console.error(\"Update transaction error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\nasync function DELETE(request) {\n    try {\n        const { searchParams } = new URL(request.url);\n        const id = searchParams.get(\"id\");\n        if (!id) {\n            return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n                error: \"Transaction ID is required\"\n            }, {\n                status: 400\n            });\n        }\n        await (0,_lib_database_js__WEBPACK_IMPORTED_MODULE_1__.deleteTransaction)(id);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            success: true,\n            message: \"Transaction deleted successfully\"\n        });\n    } catch (error) {\n        console.error(\"Delete transaction error:\", error);\n        return next_server__WEBPACK_IMPORTED_MODULE_0__.NextResponse.json({\n            error: \"Internal server error\"\n        }, {\n            status: 500\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SUFBSTtZQUNQLE9BQU81QixxREFBWUEsQ0FBQ2MsSUFBSSxDQUN0QjtnQkFBRUMsT0FBTztZQUE2QixHQUN0QztnQkFBRUMsUUFBUTtZQUFJO1FBRWxCO1FBRUEsTUFBTVosbUVBQWlCQSxDQUFDd0I7UUFFeEIsT0FBTzVCLHFEQUFZQSxDQUFDYyxJQUFJLENBQUM7WUFDdkJJLFNBQVM7WUFDVFksU0FBUztRQUNYO0lBRUYsRUFBRSxPQUFPZixPQUFPO1FBQ2RJLFFBQVFKLEtBQUssQ0FBQyw2QkFBNkJBO1FBQzNDLE9BQU9mLHFEQUFZQSxDQUFDYyxJQUFJLENBQ3RCO1lBQUVDLE9BQU87UUFBd0IsR0FDakM7WUFBRUMsUUFBUTtRQUFJO0lBRWxCO0FBQ0YiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zbWFydC1idWRnZXQtYXBwLy4vYXBwL2FwaS90cmFuc2FjdGlvbnMvcm91dGUuanM/NjhlOCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZXh0UmVzcG9uc2UgfSBmcm9tICduZXh0L3NlcnZlcic7XHJcbmltcG9ydCB7IGdldFVzZXJUcmFuc2FjdGlvbnMsIGFkZFRyYW5zYWN0aW9uLCB1cGRhdGVUcmFuc2FjdGlvbiwgZGVsZXRlVHJhbnNhY3Rpb24sIHVwZGF0ZUJ1ZGdldFNwZW50IH0gZnJvbSAnLi4vLi4vLi4vbGliL2RhdGFiYXNlLmpzJztcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBHRVQocmVxdWVzdCkge1xyXG4gIHRyeSB7XHJcbiAgICBjb25zdCB7IHNlYXJjaFBhcmFtcyB9ID0gbmV3IFVSTChyZXF1ZXN0LnVybCk7XHJcbiAgICBjb25zdCB1c2VySWQgPSBzZWFyY2hQYXJhbXMuZ2V0KCd1c2VySWQnKTtcclxuICAgIGNvbnN0IGJ1ZGdldElkID0gc2VhcmNoUGFyYW1zLmdldCgnYnVkZ2V0SWQnKTtcclxuXHJcbiAgICBpZiAoIXVzZXJJZCkge1xyXG4gICAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgICAgeyBlcnJvcjogJ1VzZXIgSUQgaXMgcmVxdWlyZWQnIH0sXHJcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XHJcbiAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdHJhbnNhY3Rpb25zID0gYXdhaXQgZ2V0VXNlclRyYW5zYWN0aW9ucyh1c2VySWQsIGJ1ZGdldElkKTtcclxuXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICB0cmFuc2FjdGlvbnNcclxuICAgIH0pO1xyXG5cclxuICB9IGNhdGNoIChlcnJvcikge1xyXG4gICAgY29uc29sZS5lcnJvcignR2V0IHRyYW5zYWN0aW9ucyBlcnJvcjonLCBlcnJvcik7XHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oXHJcbiAgICAgIHsgZXJyb3I6ICdJbnRlcm5hbCBzZXJ2ZXIgZXJyb3InIH0sXHJcbiAgICAgIHsgc3RhdHVzOiA1MDAgfVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBQT1NUKHJlcXVlc3QpIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgeyB1c2VySWQsIC4uLnRyYW5zYWN0aW9uRGF0YSB9ID0gYXdhaXQgcmVxdWVzdC5qc29uKCk7XHJcblxyXG4gICAgaWYgKCF1c2VySWQpIHtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICAgIHsgZXJyb3I6ICdVc2VyIElEIGlzIHJlcXVpcmVkJyB9LFxyXG4gICAgICAgIHsgc3RhdHVzOiA0MDAgfVxyXG4gICAgICApO1xyXG4gICAgfVxyXG5cclxuICAgIGlmICghdHJhbnNhY3Rpb25EYXRhLmFtb3VudCB8fCAhdHJhbnNhY3Rpb25EYXRhLmRlc2NyaXB0aW9uIHx8ICF0cmFuc2FjdGlvbkRhdGEuY2F0ZWdvcnkgfHwgIXRyYW5zYWN0aW9uRGF0YS50eXBlKSB7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgICB7IGVycm9yOiAnQW1vdW50LCBkZXNjcmlwdGlvbiwgY2F0ZWdvcnksIGFuZCB0eXBlIGFyZSByZXF1aXJlZCcgfSxcclxuICAgICAgICB7IHN0YXR1czogNDAwIH1cclxuICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdCB0cmFuc2FjdGlvbiA9IGF3YWl0IGFkZFRyYW5zYWN0aW9uKHVzZXJJZCwgdHJhbnNhY3Rpb25EYXRhKTtcclxuXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICB0cmFuc2FjdGlvblxyXG4gICAgfSk7XHJcblxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdBZGQgdHJhbnNhY3Rpb24gZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICB7IGVycm9yOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9LFxyXG4gICAgICB7IHN0YXR1czogNTAwIH1cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gUFVUKHJlcXVlc3QpIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgeyBpZCwgLi4udHJhbnNhY3Rpb25EYXRhIH0gPSBhd2FpdCByZXF1ZXN0Lmpzb24oKTtcclxuXHJcbiAgICBpZiAoIWlkKSB7XHJcbiAgICAgIHJldHVybiBOZXh0UmVzcG9uc2UuanNvbihcclxuICAgICAgICB7IGVycm9yOiAnVHJhbnNhY3Rpb24gSUQgaXMgcmVxdWlyZWQnIH0sXHJcbiAgICAgICAgeyBzdGF0dXM6IDQwMCB9XHJcbiAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3QgdHJhbnNhY3Rpb24gPSBhd2FpdCB1cGRhdGVUcmFuc2FjdGlvbihpZCwgdHJhbnNhY3Rpb25EYXRhKTtcclxuXHJcbiAgICByZXR1cm4gTmV4dFJlc3BvbnNlLmpzb24oe1xyXG4gICAgICBzdWNjZXNzOiB0cnVlLFxyXG4gICAgICB0cmFuc2FjdGlvblxyXG4gICAgfSk7XHJcblxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdVcGRhdGUgdHJhbnNhY3Rpb24gZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICB7IGVycm9yOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9LFxyXG4gICAgICB7IHN0YXR1czogNTAwIH1cclxuICAgICk7XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gREVMRVRFKHJlcXVlc3QpIHtcclxuICB0cnkge1xyXG4gICAgY29uc3QgeyBzZWFyY2hQYXJhbXMgfSA9IG5ldyBVUkwocmVxdWVzdC51cmwpO1xyXG4gICAgY29uc3QgaWQgPSBzZWFyY2hQYXJhbXMuZ2V0KCdpZCcpO1xyXG5cclxuICAgIGlmICghaWQpIHtcclxuICAgICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICAgIHsgZXJyb3I6ICdUcmFuc2FjdGlvbiBJRCBpcyByZXF1aXJlZCcgfSxcclxuICAgICAgICB7IHN0YXR1czogNDAwIH1cclxuICAgICAgKTtcclxuICAgIH1cclxuXHJcbiAgICBhd2FpdCBkZWxldGVUcmFuc2FjdGlvbihpZCk7XHJcblxyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKHtcclxuICAgICAgc3VjY2VzczogdHJ1ZSxcclxuICAgICAgbWVzc2FnZTogJ1RyYW5zYWN0aW9uIGRlbGV0ZWQgc3VjY2Vzc2Z1bGx5J1xyXG4gICAgfSk7XHJcblxyXG4gIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICBjb25zb2xlLmVycm9yKCdEZWxldGUgdHJhbnNhY3Rpb24gZXJyb3I6JywgZXJyb3IpO1xyXG4gICAgcmV0dXJuIE5leHRSZXNwb25zZS5qc29uKFxyXG4gICAgICB7IGVycm9yOiAnSW50ZXJuYWwgc2VydmVyIGVycm9yJyB9LFxyXG4gICAgICB7IHN0YXR1czogNTAwIH1cclxuICAgICk7XHJcbiAgfVxyXG59Il0sIm5hbWVzIjpbIk5leHRSZXNwb25zZSIsImdldFVzZXJUcmFuc2FjdGlvbnMiLCJhZGRUcmFuc2FjdGlvbiIsInVwZGF0ZVRyYW5zYWN0aW9uIiwiZGVsZXRlVHJhbnNhY3Rpb24iLCJ1cGRhdGVCdWRnZXRTcGVudCIsIkdFVCIsInJlcXVlc3QiLCJzZWFyY2hQYXJhbXMiLCJVUkwiLCJ1cmwiLCJ1c2VySWQiLCJnZXQiLCJidWRnZXRJZCIsImpzb24iLCJlcnJvciIsInN0YXR1cyIsInRyYW5zYWN0aW9ucyIsInN1Y2Nlc3MiLCJjb25zb2xlIiwiUE9TVCIsInRyYW5zYWN0aW9uRGF0YSIsImFtb3VudCIsImRlc2NyaXB0aW9uIiwiY2F0ZWdvcnkiLCJ0eXBlIiwidHJhbnNhY3Rpb24iLCJQVVQiLCJpZCIsIkRFTEVURSIsIm1lc3NhZ2UiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./app/api/transactions/route.js\n");

/***/ }),

/***/ "(rsc)/./lib/database.js":
/*!*************************!*\
  !*** ./lib/database.js ***!
  \*************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEMO_BUDGETS: () => (/* binding */ DEMO_BUDGETS),\n/* harmony export */   DEMO_CREDENTIALS: () => (/* binding */ DEMO_CREDENTIALS),\n/* harmony export */   DEMO_TRANSACTIONS: () => (/* binding */ DEMO_TRANSACTIONS),\n/* harmony export */   addBudget: () => (/* binding */ addBudget),\n/* harmony export */   addTransaction: () => (/* binding */ addTransaction),\n/* harmony export */   authenticateUser: () => (/* binding */ authenticateUser),\n/* harmony export */   createOrGetDemoUser: () => (/* binding */ createOrGetDemoUser),\n/* harmony export */   createUser: () => (/* binding */ createUser),\n/* harmony export */   deleteBudget: () => (/* binding */ deleteBudget),\n/* harmony export */   deleteTransaction: () => (/* binding */ deleteTransaction),\n/* harmony export */   getBudgetWithTransactions: () => (/* binding */ getBudgetWithTransactions),\n/* harmony export */   getUserBudgets: () => (/* binding */ getUserBudgets),\n/* harmony export */   getUserById: () => (/* binding */ getUserById),\n/* harmony export */   getUserTransactions: () => (/* binding */ getUserTransactions),\n/* harmony export */   prisma: () => (/* binding */ prisma),\n/* harmony export */   resetDemoData: () => (/* binding */ resetDemoData),\n/* harmony export */   seedDemoData: () => (/* binding */ seedDemoData),\n/* harmony export */   updateBudget: () => (/* binding */ updateBudget),\n/* harmony export */   updateBudgetSpent: () => (/* binding */ updateBudgetSpent),\n/* harmony export */   updateTransaction: () => (/* binding */ updateTransaction),\n/* harmony export */   updateUserProfile: () => (/* binding */ updateUserProfile)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var bcryptjs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! bcryptjs */ \"(rsc)/./node_modules/bcryptjs/index.js\");\n\n\nconst globalForPrisma = globalThis;\nconst prisma = globalForPrisma.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient();\nif (true) globalForPrisma.prisma = prisma;\n// Demo account credentials\nconst DEMO_CREDENTIALS = {\n    email: \"demo@example.com\",\n    password: \"password123\",\n    name: \"Demo User\"\n};\n// Demo data for the demo account\nconst DEMO_TRANSACTIONS = [\n    {\n        amount: 3200,\n        description: \"Monthly Salary\",\n        category: \"Salary\",\n        type: \"income\",\n        date: new Date(\"2024-08-01\")\n    },\n    {\n        amount: 1200,\n        description: \"Freelance Project\",\n        category: \"Freelance\",\n        type: \"income\",\n        date: new Date(\"2024-08-15\")\n    },\n    {\n        amount: 850,\n        description: \"Rent Payment\",\n        category: \"Housing\",\n        type: \"expense\",\n        date: new Date(\"2024-08-01\")\n    },\n    {\n        amount: 320,\n        description: \"Grocery Shopping\",\n        category: \"Food & Dining\",\n        type: \"expense\",\n        date: new Date(\"2024-08-05\")\n    },\n    {\n        amount: 45,\n        description: \"Gas Station\",\n        category: \"Transportation\",\n        type: \"expense\",\n        date: new Date(\"2024-08-10\")\n    },\n    {\n        amount: 89,\n        description: \"Movie Night\",\n        category: \"Entertainment\",\n        type: \"expense\",\n        date: new Date(\"2024-08-12\")\n    },\n    {\n        amount: 156,\n        description: \"Online Shopping\",\n        category: \"Shopping\",\n        type: \"expense\",\n        date: new Date(\"2024-08-18\")\n    },\n    {\n        amount: 75,\n        description: \"Gym Membership\",\n        category: \"Health & Fitness\",\n        type: \"expense\",\n        date: new Date(\"2024-08-20\")\n    }\n];\nconst DEMO_BUDGETS = [\n    {\n        category: \"Food & Dining\",\n        budget: 800,\n        spent: 567,\n        icon: \"ri-restaurant-line\",\n        color: \"bg-blue-500\",\n        description: \"Restaurants, groceries, and food delivery\"\n    },\n    {\n        category: \"Transportation\",\n        budget: 400,\n        spent: 285,\n        icon: \"ri-gas-station-line\",\n        color: \"bg-teal-500\",\n        description: \"Gas, public transport, and ride-sharing\"\n    },\n    {\n        category: \"Entertainment\",\n        budget: 200,\n        spent: 178,\n        icon: \"ri-film-line\",\n        color: \"bg-pink-500\",\n        description: \"Movies, games, and leisure activities\"\n    },\n    {\n        category: \"Shopping\",\n        budget: 600,\n        spent: 432,\n        icon: \"ri-shopping-bag-line\",\n        color: \"bg-red-500\",\n        description: \"Clothes, electronics, and general shopping\"\n    },\n    {\n        category: \"Health & Fitness\",\n        budget: 150,\n        spent: 99,\n        icon: \"ri-heart-pulse-line\",\n        color: \"bg-orange-500\",\n        description: \"Gym, supplements, and medical expenses\"\n    },\n    {\n        category: \"Utilities\",\n        budget: 250,\n        spent: 234,\n        icon: \"ri-flashlight-line\",\n        color: \"bg-yellow-500\",\n        description: \"Electricity, water, internet, and phone\"\n    },\n    {\n        category: \"Education\",\n        budget: 300,\n        spent: 165,\n        icon: \"ri-book-line\",\n        color: \"bg-indigo-500\",\n        description: \"Courses, books, and learning materials\"\n    },\n    {\n        category: \"Travel\",\n        budget: 500,\n        spent: 0,\n        icon: \"ri-plane-line\",\n        color: \"bg-purple-500\",\n        description: \"Flights, hotels, and vacation expenses\"\n    }\n];\n// Create or get the demo user\nasync function createOrGetDemoUser() {\n    try {\n        // Check if demo user already exists\n        let demoUser = await prisma.user.findUnique({\n            where: {\n                email: DEMO_CREDENTIALS.email\n            }\n        });\n        if (!demoUser) {\n            // Hash the password\n            const hashedPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].hash(DEMO_CREDENTIALS.password, 12);\n            // Create the demo user\n            demoUser = await prisma.user.create({\n                data: {\n                    email: DEMO_CREDENTIALS.email,\n                    password: hashedPassword,\n                    name: DEMO_CREDENTIALS.name,\n                    isDemo: true\n                }\n            });\n            console.log(\"Demo user created successfully\");\n        }\n        return demoUser;\n    } catch (error) {\n        console.error(\"Error creating demo user:\", error);\n        throw error;\n    }\n}\n// Seed demo data for the demo user\nasync function seedDemoData() {\n    try {\n        const demoUser = await createOrGetDemoUser();\n        // Check if demo data already exists\n        const existingTransactions = await prisma.transaction.count({\n            where: {\n                userId: demoUser.id\n            }\n        });\n        const existingBudgets = await prisma.budget.count({\n            where: {\n                userId: demoUser.id\n            }\n        });\n        // Only seed if no data exists\n        if (existingTransactions === 0) {\n            await prisma.transaction.createMany({\n                data: DEMO_TRANSACTIONS.map((transaction)=>({\n                        ...transaction,\n                        userId: demoUser.id\n                    }))\n            });\n            console.log(\"Demo transactions seeded successfully\");\n        }\n        if (existingBudgets === 0) {\n            await prisma.budget.createMany({\n                data: DEMO_BUDGETS.map((budget)=>({\n                        ...budget,\n                        userId: demoUser.id\n                    }))\n            });\n            console.log(\"Demo budgets seeded successfully\");\n        }\n        return demoUser;\n    } catch (error) {\n        console.error(\"Error seeding demo data:\", error);\n        throw error;\n    }\n}\n// Reset demo data (useful for testing)\nasync function resetDemoData() {\n    try {\n        const demoUser = await prisma.user.findUnique({\n            where: {\n                email: DEMO_CREDENTIALS.email\n            }\n        });\n        if (demoUser) {\n            // Delete existing demo data\n            await prisma.transaction.deleteMany({\n                where: {\n                    userId: demoUser.id\n                }\n            });\n            await prisma.budget.deleteMany({\n                where: {\n                    userId: demoUser.id\n                }\n            });\n            // Re-seed demo data\n            await seedDemoData();\n            console.log(\"Demo data reset successfully\");\n        }\n    } catch (error) {\n        console.error(\"Error resetting demo data:\", error);\n        throw error;\n    }\n}\n// Authenticate user\nasync function authenticateUser(email, password) {\n    try {\n        const user = await prisma.user.findUnique({\n            where: {\n                email\n            }\n        });\n        if (!user) {\n            return null;\n        }\n        const isValidPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].compare(password, user.password);\n        if (!isValidPassword) {\n            return null;\n        }\n        // Return user without password\n        const { password: _, ...userWithoutPassword } = user;\n        return userWithoutPassword;\n    } catch (error) {\n        console.error(\"Error authenticating user:\", error);\n        throw error;\n    }\n}\n// Create a new user\nasync function createUser(email, password, name) {\n    try {\n        const hashedPassword = await bcryptjs__WEBPACK_IMPORTED_MODULE_1__[\"default\"].hash(password, 12);\n        const user = await prisma.user.create({\n            data: {\n                email,\n                password: hashedPassword,\n                name,\n                isDemo: false\n            }\n        });\n        // Return user without password\n        const { password: _, ...userWithoutPassword } = user;\n        return userWithoutPassword;\n    } catch (error) {\n        console.error(\"Error creating user:\", error);\n        throw error;\n    }\n}\n// Get user by ID\nasync function getUserById(id) {\n    try {\n        const user = await prisma.user.findUnique({\n            where: {\n                id\n            },\n            select: {\n                id: true,\n                email: true,\n                name: true,\n                avatar: true,\n                isDemo: true,\n                createdAt: true,\n                updatedAt: true\n            }\n        });\n        return user;\n    } catch (error) {\n        console.error(\"Error getting user by ID:\", error);\n        throw error;\n    }\n}\n// Get user transactions\nasync function getUserTransactions(userId, budgetId = null) {\n    try {\n        const whereClause = {\n            userId\n        };\n        // If budgetId is provided, filter by budget\n        if (budgetId) {\n            whereClause.budgetId = budgetId;\n        }\n        const transactions = await prisma.transaction.findMany({\n            where: whereClause,\n            include: {\n                budget: {\n                    select: {\n                        id: true,\n                        category: true,\n                        icon: true,\n                        color: true\n                    }\n                }\n            },\n            orderBy: {\n                date: \"desc\"\n            }\n        });\n        return transactions;\n    } catch (error) {\n        console.error(\"Error getting user transactions:\", error);\n        throw error;\n    }\n}\n// Get user budgets with calculated spent amounts\nasync function getUserBudgets(userId) {\n    try {\n        const budgets = await prisma.budget.findMany({\n            where: {\n                userId\n            },\n            include: {\n                transactions: {\n                    where: {\n                        type: \"expense\"\n                    }\n                }\n            },\n            orderBy: {\n                category: \"asc\"\n            }\n        });\n        // Calculate spent amount for each budget from related transactions\n        const budgetsWithSpent = budgets.map((budget)=>{\n            const spent = budget.transactions.reduce((sum, transaction)=>{\n                return sum + Math.abs(transaction.amount);\n            }, 0);\n            return {\n                ...budget,\n                spent,\n                transactionCount: budget.transactions.length,\n                // Remove transactions from the response to keep it clean\n                transactions: undefined\n            };\n        });\n        return budgetsWithSpent;\n    } catch (error) {\n        console.error(\"Error getting user budgets:\", error);\n        throw error;\n    }\n}\n// Get a specific budget with its transactions\nasync function getBudgetWithTransactions(userId, budgetId) {\n    try {\n        const budget = await prisma.budget.findFirst({\n            where: {\n                id: budgetId,\n                userId\n            },\n            include: {\n                transactions: {\n                    orderBy: {\n                        date: \"desc\"\n                    }\n                }\n            }\n        });\n        if (!budget) {\n            return null;\n        }\n        // Calculate spent amount\n        const spent = budget.transactions.filter((t)=>t.type === \"expense\").reduce((sum, transaction)=>sum + Math.abs(transaction.amount), 0);\n        return {\n            ...budget,\n            spent,\n            transactionCount: budget.transactions.length\n        };\n    } catch (error) {\n        console.error(\"Error getting budget with transactions:\", error);\n        throw error;\n    }\n}\n// Add transaction\nasync function addTransaction(userId, transactionData) {\n    try {\n        // Extract only the fields that exist in the database schema\n        const { description, category, amount, date, type, budgetId } = transactionData;\n        // Find budget by category if budgetId is not provided but category matches\n        let finalBudgetId = budgetId;\n        if (!finalBudgetId && type === \"expense\") {\n            const budget = await prisma.budget.findFirst({\n                where: {\n                    userId,\n                    category\n                }\n            });\n            finalBudgetId = budget?.id;\n        }\n        const transaction = await prisma.transaction.create({\n            data: {\n                description,\n                category,\n                amount,\n                type,\n                date: new Date(date),\n                userId,\n                budgetId: finalBudgetId\n            }\n        });\n        // Update budget spent amount if this is an expense with a budget\n        if (type === \"expense\" && finalBudgetId) {\n            await updateBudgetSpent(finalBudgetId);\n        }\n        return transaction;\n    } catch (error) {\n        console.error(\"Error adding transaction:\", error);\n        throw error;\n    }\n}\n// Add budget\nasync function addBudget(userId, budgetData) {\n    try {\n        const budget = await prisma.budget.create({\n            data: {\n                ...budgetData,\n                userId\n            }\n        });\n        return budget;\n    } catch (error) {\n        console.error(\"Error adding budget:\", error);\n        throw error;\n    }\n}\n// Update budget\nasync function updateBudget(budgetId, budgetData) {\n    try {\n        const budget = await prisma.budget.update({\n            where: {\n                id: budgetId\n            },\n            data: budgetData\n        });\n        return budget;\n    } catch (error) {\n        console.error(\"Error updating budget:\", error);\n        throw error;\n    }\n}\n// Update transaction\nasync function updateTransaction(transactionId, transactionData) {\n    try {\n        // Get the original transaction to check if budget changed\n        const originalTransaction = await prisma.transaction.findUnique({\n            where: {\n                id: transactionId\n            }\n        });\n        const transaction = await prisma.transaction.update({\n            where: {\n                id: transactionId\n            },\n            data: transactionData\n        });\n        // Update budget spent amounts for affected budgets\n        if (originalTransaction?.budgetId && originalTransaction.type === \"expense\") {\n            await updateBudgetSpent(originalTransaction.budgetId);\n        }\n        if (transaction.budgetId && transaction.type === \"expense\" && transaction.budgetId !== originalTransaction?.budgetId) {\n            await updateBudgetSpent(transaction.budgetId);\n        }\n        return transaction;\n    } catch (error) {\n        console.error(\"Error updating transaction:\", error);\n        throw error;\n    }\n}\n// Delete transaction\nasync function deleteTransaction(transactionId) {\n    try {\n        // Get the transaction before deleting to update budget\n        const transaction = await prisma.transaction.findUnique({\n            where: {\n                id: transactionId\n            }\n        });\n        await prisma.transaction.delete({\n            where: {\n                id: transactionId\n            }\n        });\n        // Update budget spent amount if this was an expense with a budget\n        if (transaction?.budgetId && transaction.type === \"expense\") {\n            await updateBudgetSpent(transaction.budgetId);\n        }\n        return true;\n    } catch (error) {\n        console.error(\"Error deleting transaction:\", error);\n        throw error;\n    }\n}\n// Delete budget\nasync function deleteBudget(budgetId) {\n    try {\n        await prisma.budget.delete({\n            where: {\n                id: budgetId\n            }\n        });\n        return true;\n    } catch (error) {\n        console.error(\"Error deleting budget:\", error);\n        throw error;\n    }\n}\n// Update budget spent amount\nasync function updateBudgetSpent(budgetId) {\n    try {\n        // Calculate total spent for this budget from transactions\n        const transactions = await prisma.transaction.findMany({\n            where: {\n                budgetId: budgetId,\n                type: \"expense\"\n            }\n        });\n        const totalSpent = transactions.reduce((sum, transaction)=>{\n            return sum + Math.abs(transaction.amount);\n        }, 0);\n        // Update the budget with the calculated spent amount\n        const budget = await prisma.budget.update({\n            where: {\n                id: budgetId\n            },\n            data: {\n                spent: totalSpent\n            }\n        });\n        return budget;\n    } catch (error) {\n        console.error(\"Error updating budget spent:\", error);\n        throw error;\n    }\n}\n// Update user profile\nasync function updateUserProfile(userId, profileData) {\n    try {\n        const user = await prisma.user.update({\n            where: {\n                id: userId\n            },\n            data: {\n                name: profileData.name,\n                email: profileData.email,\n                avatar: profileData.avatar\n            }\n        });\n        return user;\n    } catch (error) {\n        console.error(\"Error updating user profile:\", error);\n        throw error;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./lib/database.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next","vendor-chunks/bcryptjs"], () => (__webpack_exec__("(rsc)/./node_modules/next/dist/build/webpack/loaders/next-app-loader.js?name=app%2Fapi%2Ftransactions%2Froute&page=%2Fapi%2Ftransactions%2Froute&appPaths=&pagePath=private-next-app-dir%2Fapi%2Ftransactions%2Froute.js&appDir=C%3A%5CUsers%5CUSER%5CDesktop%5Csmart_project2%5Capp&pageExtensions=tsx&pageExtensions=ts&pageExtensions=jsx&pageExtensions=js&rootDir=C%3A%5CUsers%5CUSER%5CDesktop%5Csmart_project2&isDev=true&tsconfigPath=tsconfig.json&basePath=&assetPrefix=&nextConfigOutput=&preferredRegion=&middlewareConfig=e30%3D!")));
module.exports = __webpack_exports__;

})();