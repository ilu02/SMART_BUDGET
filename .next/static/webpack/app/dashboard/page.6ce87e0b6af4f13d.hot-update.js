"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/dashboard/page",{

/***/ "(app-pages-browser)/./app/contexts/TransactionContext.tsx":
/*!*********************************************!*\
  !*** ./app/contexts/TransactionContext.tsx ***!
  \*********************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TransactionProvider: function() { return /* binding */ TransactionProvider; },\n/* harmony export */   useTransactions: function() { return /* binding */ useTransactions; }\n/* harmony export */ });\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _AuthContext__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./AuthContext */ \"(app-pages-browser)/./app/contexts/AuthContext.tsx\");\n/* harmony import */ var react_hot_toast__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! react-hot-toast */ \"(app-pages-browser)/./node_modules/react-hot-toast/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ TransactionProvider,useTransactions auto */ \nvar _s = $RefreshSig$(), _s1 = $RefreshSig$();\n\n\n\n// Category to icon/color mapping\nconst categoryMapping = {\n    \"Food & Dining\": {\n        icon: \"ri-restaurant-line\",\n        color: \"text-blue-600 bg-blue-50\"\n    },\n    \"Transportation\": {\n        icon: \"ri-gas-station-line\",\n        color: \"text-teal-600 bg-teal-50\"\n    },\n    \"Entertainment\": {\n        icon: \"ri-film-line\",\n        color: \"text-pink-600 bg-pink-50\"\n    },\n    \"Shopping\": {\n        icon: \"ri-shopping-bag-line\",\n        color: \"text-red-600 bg-red-50\"\n    },\n    \"Health & Fitness\": {\n        icon: \"ri-heart-pulse-line\",\n        color: \"text-orange-600 bg-orange-50\"\n    },\n    \"Utilities\": {\n        icon: \"ri-flashlight-line\",\n        color: \"text-yellow-600 bg-yellow-50\"\n    },\n    \"Education\": {\n        icon: \"ri-book-line\",\n        color: \"text-indigo-600 bg-indigo-50\"\n    },\n    \"Travel\": {\n        icon: \"ri-plane-line\",\n        color: \"text-purple-600 bg-purple-50\"\n    },\n    \"Income\": {\n        icon: \"ri-money-dollar-circle-line\",\n        color: \"text-green-600 bg-green-50\"\n    },\n    \"Other\": {\n        icon: \"ri-more-line\",\n        color: \"text-gray-600 bg-gray-50\"\n    }\n};\nconst TransactionContext = /*#__PURE__*/ (0,react__WEBPACK_IMPORTED_MODULE_1__.createContext)(undefined);\nfunction TransactionProvider(param) {\n    let { children } = param;\n    _s();\n    const [transactions, setTransactions] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)([]);\n    const [loading, setLoading] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(true);\n    const { user, isAuthenticated } = (0,_AuthContext__WEBPACK_IMPORTED_MODULE_2__.useAuth)();\n    // Load transactions from database when user is authenticated\n    const loadTransactions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        if (!(user === null || user === void 0 ? void 0 : user.id)) {\n            setTransactions([]);\n            setLoading(false);\n            return;\n        }\n        try {\n            setLoading(true);\n            const response = await fetch(\"/api/transactions?userId=\".concat(user.id));\n            const data = await response.json();\n            if (response.ok && data.success) {\n                // Add legacy fields for compatibility\n                const transactionsWithLegacyFields = data.transactions.map((transaction)=>{\n                    var _categoryMapping_transaction_category, _categoryMapping_transaction_category1;\n                    return {\n                        ...transaction,\n                        merchant: transaction.description,\n                        tags: [\n                            transaction.category.toLowerCase()\n                        ],\n                        icon: ((_categoryMapping_transaction_category = categoryMapping[transaction.category]) === null || _categoryMapping_transaction_category === void 0 ? void 0 : _categoryMapping_transaction_category.icon) || \"ri-more-line\",\n                        color: ((_categoryMapping_transaction_category1 = categoryMapping[transaction.category]) === null || _categoryMapping_transaction_category1 === void 0 ? void 0 : _categoryMapping_transaction_category1.color) || \"text-gray-600 bg-gray-50\"\n                    };\n                });\n                setTransactions(transactionsWithLegacyFields);\n            } else {\n                console.error(\"Failed to load transactions:\", data.error);\n                setTransactions([]);\n            }\n        } catch (error) {\n            console.error(\"Error loading transactions:\", error);\n            setTransactions([]);\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        user === null || user === void 0 ? void 0 : user.id\n    ]);\n    // Load transactions when user changes\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (isAuthenticated && user) {\n            loadTransactions();\n        } else {\n            setTransactions([]);\n            setLoading(false);\n        }\n    }, [\n        user,\n        isAuthenticated,\n        loadTransactions\n    ]);\n    const checkBudgetsExist = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        if (!(user === null || user === void 0 ? void 0 : user.id)) {\n            return false;\n        }\n        try {\n            const response = await fetch(\"/api/budgets?userId=\".concat(user.id));\n            const data = await response.json();\n            if (response.ok && data.success) {\n                return data.budgets && data.budgets.length > 0;\n            }\n            return false;\n        } catch (error) {\n            console.error(\"Error checking budgets:\", error);\n            return false;\n        }\n    }, [\n        user === null || user === void 0 ? void 0 : user.id\n    ]);\n    const addTransaction = async (transactionData)=>{\n        if (!(user === null || user === void 0 ? void 0 : user.id)) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(\"User not authenticated\");\n            return false;\n        }\n        // Check if budgets exist before allowing transaction creation\n        const budgetsExist = await checkBudgetsExist();\n        if (!budgetsExist) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(\"Create a budget first before adding incomes or expenses.\");\n            return false;\n        }\n        // Ensure budgetId is provided for expenses\n        if (transactionData.type === \"expense\" && !transactionData.budgetId) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(\"Please select a budget for this expense.\");\n            return false;\n        }\n        try {\n            const response = await fetch(\"/api/transactions\", {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    ...transactionData,\n                    userId: user.id\n                })\n            });\n            const data = await response.json();\n            if (response.ok && data.success) {\n                var _categoryMapping_data_transaction_category, _categoryMapping_data_transaction_category1;\n                // Add the new transaction to local state with legacy fields\n                const newTransaction = {\n                    ...data.transaction,\n                    merchant: data.transaction.description,\n                    tags: [\n                        data.transaction.category.toLowerCase()\n                    ],\n                    icon: ((_categoryMapping_data_transaction_category = categoryMapping[data.transaction.category]) === null || _categoryMapping_data_transaction_category === void 0 ? void 0 : _categoryMapping_data_transaction_category.icon) || \"ri-more-line\",\n                    color: ((_categoryMapping_data_transaction_category1 = categoryMapping[data.transaction.category]) === null || _categoryMapping_data_transaction_category1 === void 0 ? void 0 : _categoryMapping_data_transaction_category1.color) || \"text-gray-600 bg-gray-50\"\n                };\n                setTransactions((prev)=>[\n                        newTransaction,\n                        ...prev\n                    ]);\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].success(\"Transaction added successfully!\");\n                return true;\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(data.error || \"Failed to add transaction\");\n                return false;\n            }\n        } catch (error) {\n            console.error(\"Error adding transaction:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(\"Failed to add transaction\");\n            return false;\n        }\n    };\n    const updateTransaction = async (id, updates)=>{\n        if (!(user === null || user === void 0 ? void 0 : user.id)) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(\"User not authenticated\");\n            return;\n        }\n        try {\n            const response = await fetch(\"/api/transactions\", {\n                method: \"PUT\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify({\n                    id,\n                    ...updates\n                })\n            });\n            const data = await response.json();\n            if (response.ok && data.success) {\n                // Update local state\n                setTransactions((prev)=>prev.map((transaction)=>{\n                        if (transaction.id === id) {\n                            const updated = {\n                                ...transaction,\n                                ...updates\n                            };\n                            // Update icon and color if category changed\n                            if (updates.category) {\n                                var _categoryMapping_updates_category, _categoryMapping_updates_category1;\n                                updated.icon = ((_categoryMapping_updates_category = categoryMapping[updates.category]) === null || _categoryMapping_updates_category === void 0 ? void 0 : _categoryMapping_updates_category.icon) || \"ri-more-line\";\n                                updated.color = ((_categoryMapping_updates_category1 = categoryMapping[updates.category]) === null || _categoryMapping_updates_category1 === void 0 ? void 0 : _categoryMapping_updates_category1.color) || \"text-gray-600 bg-gray-50\";\n                            }\n                            return updated;\n                        }\n                        return transaction;\n                    }));\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].success(\"Transaction updated successfully!\");\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(data.error || \"Failed to update transaction\");\n            }\n        } catch (error) {\n            console.error(\"Error updating transaction:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(\"Failed to update transaction\");\n        }\n    };\n    const deleteTransaction = async (id)=>{\n        if (!(user === null || user === void 0 ? void 0 : user.id)) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(\"User not authenticated\");\n            return;\n        }\n        try {\n            const response = await fetch(\"/api/transactions?id=\".concat(id), {\n                method: \"DELETE\"\n            });\n            const data = await response.json();\n            if (response.ok && data.success) {\n                // Update local state\n                setTransactions((prev)=>prev.filter((transaction)=>transaction.id !== id));\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].success(\"Transaction deleted successfully!\");\n            } else {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(data.error || \"Failed to delete transaction\");\n            }\n        } catch (error) {\n            console.error(\"Error deleting transaction:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(\"Failed to delete transaction\");\n        }\n    };\n    const deleteMultipleTransactions = async (ids)=>{\n        if (!(user === null || user === void 0 ? void 0 : user.id)) {\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(\"User not authenticated\");\n            return;\n        }\n        try {\n            // Delete transactions one by one (could be optimized with a batch delete endpoint)\n            const deletePromises = ids.map((id)=>fetch(\"/api/transactions?id=\".concat(id), {\n                    method: \"DELETE\"\n                }));\n            const responses = await Promise.all(deletePromises);\n            const results = await Promise.all(responses.map((r)=>r.json()));\n            const successfulDeletes = results.filter((r)=>r.success).length;\n            if (successfulDeletes > 0) {\n                // Update local state\n                setTransactions((prev)=>prev.filter((transaction)=>!ids.includes(transaction.id)));\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].success(\"\".concat(successfulDeletes, \" transaction\").concat(successfulDeletes > 1 ? \"s\" : \"\", \" deleted successfully!\"));\n            }\n            if (successfulDeletes < ids.length) {\n                react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(\"Failed to delete \".concat(ids.length - successfulDeletes, \" transaction(s)\"));\n            }\n        } catch (error) {\n            console.error(\"Error deleting transactions:\", error);\n            react_hot_toast__WEBPACK_IMPORTED_MODULE_3__[\"default\"].error(\"Failed to delete transactions\");\n        }\n    };\n    const refreshTransactions = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async ()=>{\n        await loadTransactions();\n    }, [\n        loadTransactions\n    ]);\n    const getTransactionsByCategory = (category)=>{\n        return transactions.filter((transaction)=>transaction.category === category);\n    };\n    const getTransactionsByBudget = (budgetId)=>{\n        return transactions.filter((transaction)=>transaction.budgetId === budgetId);\n    };\n    const getTransactionsByDateRange = (startDate, endDate)=>{\n        return transactions.filter((transaction)=>{\n            const transactionDate = new Date(transaction.date);\n            const start = new Date(startDate);\n            const end = new Date(endDate);\n            return transactionDate >= start && transactionDate <= end;\n        });\n    };\n    const loadTransactionsByBudget = (0,react__WEBPACK_IMPORTED_MODULE_1__.useCallback)(async (budgetId)=>{\n        if (!(user === null || user === void 0 ? void 0 : user.id)) {\n            setTransactions([]);\n            setLoading(false);\n            return;\n        }\n        try {\n            setLoading(true);\n            const response = await fetch(\"/api/transactions?userId=\".concat(user.id, \"&budgetId=\").concat(budgetId));\n            const data = await response.json();\n            if (response.ok && data.success) {\n                // Add legacy fields for compatibility\n                const transactionsWithLegacyFields = data.transactions.map((transaction)=>{\n                    var _categoryMapping_transaction_category, _categoryMapping_transaction_category1;\n                    return {\n                        ...transaction,\n                        merchant: transaction.description,\n                        tags: [\n                            transaction.category.toLowerCase()\n                        ],\n                        icon: ((_categoryMapping_transaction_category = categoryMapping[transaction.category]) === null || _categoryMapping_transaction_category === void 0 ? void 0 : _categoryMapping_transaction_category.icon) || \"ri-more-line\",\n                        color: ((_categoryMapping_transaction_category1 = categoryMapping[transaction.category]) === null || _categoryMapping_transaction_category1 === void 0 ? void 0 : _categoryMapping_transaction_category1.color) || \"text-gray-600 bg-gray-50\"\n                    };\n                });\n                setTransactions(transactionsWithLegacyFields);\n            } else {\n                console.error(\"Failed to load transactions:\", data.error);\n                setTransactions([]);\n            }\n        } catch (error) {\n            console.error(\"Error loading transactions:\", error);\n            setTransactions([]);\n        } finally{\n            setLoading(false);\n        }\n    }, [\n        user === null || user === void 0 ? void 0 : user.id\n    ]);\n    const getTotalIncome = ()=>{\n        return transactions.filter((transaction)=>transaction.amount > 0).reduce((total, transaction)=>total + transaction.amount, 0);\n    };\n    const getTotalExpenses = ()=>{\n        return Math.abs(transactions.filter((transaction)=>transaction.amount < 0).reduce((total, transaction)=>total + transaction.amount, 0));\n    };\n    const getNetIncome = ()=>{\n        return getTotalIncome() - getTotalExpenses();\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(TransactionContext.Provider, {\n        value: {\n            transactions,\n            addTransaction,\n            updateTransaction,\n            deleteTransaction,\n            deleteMultipleTransactions,\n            getTransactionsByCategory,\n            getTransactionsByBudget,\n            getTransactionsByDateRange,\n            getTotalIncome,\n            getTotalExpenses,\n            getNetIncome,\n            loading,\n            refreshTransactions,\n            loadTransactionsByBudget,\n            checkBudgetsExist\n        },\n        children: children\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\USER\\\\Desktop\\\\smart_project2\\\\app\\\\contexts\\\\TransactionContext.tsx\",\n        lineNumber: 362,\n        columnNumber: 5\n    }, this);\n}\n_s(TransactionProvider, \"HoREHFbWlVxaJhc7GRLxQEtJdpI=\", false, function() {\n    return [\n        _AuthContext__WEBPACK_IMPORTED_MODULE_2__.useAuth\n    ];\n});\n_c = TransactionProvider;\nfunction useTransactions() {\n    _s1();\n    const context = (0,react__WEBPACK_IMPORTED_MODULE_1__.useContext)(TransactionContext);\n    if (context === undefined) {\n        throw new Error(\"useTransactions must be used within a TransactionProvider\");\n    }\n    return context;\n}\n_s1(useTransactions, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"TransactionProvider\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/contexts/TransactionContext.tsx\n"));

/***/ })

});