// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  password  String
  name      String
  avatar    String?
  phone                 String?
  timezone              String?
  language              String?
  currency              String?
  currencySymbol        String?
  currencyCode          String?
  isDemo    Boolean  @default(false)
  passwordChangedAt DateTime @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  transactions  Transaction[]
  budgets       Budget[]
  notifications Notification[]

  @@map("users")
}

model Transaction {
  id          String   @id @default(cuid())
  amount      Float
  description String
  category    String
  type        String   // 'income' or 'expense'
  date        DateTime
  userId      String
  budgetId    String?  // Optional reference to budget
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user   User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  budget Budget? @relation(fields: [budgetId], references: [id], onDelete: SetNull)

  @@map("transactions")
}

model Budget {
  id          String   @id @default(cuid())
  category    String
  budget      Float
  spent       Float    @default(0)
  icon        String
  color       String
  description String?
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user         User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactions Transaction[]

  @@unique([userId, category])
  @@map("budgets")
}

model Notification {
  id          String   @id @default(cuid())
  type        String   // 'budget' | 'transaction' | 'bill' | 'goal' | 'system' | 'security'
  title       String
  message     String
  read        Boolean  @default(false)
  priority    String   // 'low' | 'medium' | 'high' | 'urgent'
  actionUrl   String?
  actionText  String?
  category    String?
  amount      Float?
  threshold   Float?
  userId      String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId, createdAt])
  @@index([userId, read])
  @@map("notifications")
}
